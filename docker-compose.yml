version: "3.9"
networks:
  app-tier:
    driver: bridge
services:
  database:
    restart: always
    image: postgres
    user: postgres
    environment:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: "${DATABASE}"
        POSTGRES_HOST_AUTH_METHOD: trust
        PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - ${DB_PORT}:5432
    networks:
      - app-tier
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 1s
      retries: 60
  greenatom:
    build:
      context: .
      dockerfile: greenatom/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE: ${DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: database
      DB_PORT: 5432
    links:
      - database
    networks:
      - app-tier
  grafana:
    build:
      context: ./grafana
    container_name: grafana
    depends_on:
      greenatom:
        condition: "service_completed_successfully"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: "${DATABASE}"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  db-images:
  grafana_data:
    external: true